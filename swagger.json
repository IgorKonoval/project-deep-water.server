{
  "openapi": "3.0.0",
  "info": {
    "title": "Water Tracker API",
    "description": "API",
    "version": "2.2.0"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "producer": ["application/json", "multipart/form-data"],
  "servers": [{ "url": "http://localhost:3000" }],
  "tags": [
    { "name": "Auth", "description": "Authorization endpoint" },
    { "name": "User", "description": "User info endpoint" },
    { "name": "Water", "description": "Water info endpoint" }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user",

        "requestBody": {
          "description": "Registration's object.",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Incorrect data in the body of the request)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationBadRequest"
                }
              }
            }
          },
          "409": {
            "description": "This email is already in use.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReRegistration"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user.",

        "requestBody": {
          "description": "Login's object.",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login's responses.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginBadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "Logout user.",
        "parameters": [
          { "in": "header", "name": "Authorization ", "required": "true" }
        ],
        "responses": {
          "200": {
            "description": "The user is Logout."
          },
          "401": {
            "description": "Unauthorized. Missing header with authorization token."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },

        "security": [{ "Bearer": [] }]
      }
    },
    "/users/info/:id": {
      "get": {
        "tags": ["User"],
        "summary": "Get infirmation about user",
        "parameters": [
          { "in": "path", "name": "id", "required": "true" },
          { "in": "header", "name": "Authorization ", "required": "true" }
        ],
        "responses": {
          "200": {
            "description": "Information reserved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing header with authorization token."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },

        "security": [{ "Bearer": [] }]
      }
    },
    "/users/avatar/:id": {
      "patch": {
        "tags": ["User"],
        "summary": "Chenge user's avatar.",
        "parameters": [
          { "in": "path", "name": "id", "required": "true" },
          { "in": "header", "name": "Authorization ", "required": "true" }
        ],
        "requestBody": {
          "description": "Avatar's file",
          "required": "true",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChengeAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar replaced successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChengeAvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing header with authorization token."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },

        "security": [{ "Bearer": [] }]
      }
    },
    "/users/edit/:id": {
      "patch": {
        "tags": ["User"],
        "summary": "Chenge user's informations.",
        "parameters": [
          { "in": "path", "name": "id", "required": "true" },
          { "in": "header", "name": "Authorization ", "required": "true" }
        ],
        "requestBody": {
          "description": "Object with new user's info",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChengeUserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information hes been successfully changed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChengeUserInfoRequest"
                }
              }
            }
          },
          "400": {
            "description": "The new password must be different from the old one."
          },
          "401": {
            "description": "Unauthorized. Missing header with authorization token."
          },
          "500": {
            "description": "Internal Server Error"
          }
        },

        "security": [{ "Bearer": [] }]
      }
    },
    "/waters/created": {
      "post": {
        "tags": ["Water"],
        "summary": "Created new day's water odject.",
        "parameters": [
          { "in": "header", "name": "Authorization ", "required": "true" }
        ],
        "responses": {
          "201": {
            "description": "New day's water odject",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedWaterResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },

        "security": [{ "Bearer": [] }]
      }
    },
    "/waters/daily_limit/:id": {
      "patch": {
        "tags": ["Water"],
        "summary": "Chenge daily limit.",
        "parameters": [
          { "in": "header", "name": "Authorization ", "required": "true" }
        ],
        "requestBody": {
          "description": "Object with new user's info",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChengeDailyLimitBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created successesfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Daily norma changed"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },

        "security": [{ "Bearer": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email.",
            "example": "user@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwertyui"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Registration response.",
            "example": "Registration successfully"
          }
        }
      },
      "RegistrationBadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Registration response.",
            "example": "Bad request"
          }
        }
      },
      "ReRegistration": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Registration response.",
            "example": "Email in use"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authorization token.",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MDZiMjExYTQwNzRlZTk0NDNhNDc3NSIsImlhdCI6MTcxMTcxNzIzNywiZXhwIjoxNzExNzIwODM3fQ.1ZyfBjIVdzrWqsSEcOlSjH0gI_zwDdOY4K50ZF3wPxA"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Emil",
                "example": "user@mail.com"
              }
            }
          }
        }
      },
      "LoginBadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Email or password is wrong error.",
            "example": "Email or password is wrong"
          }
        }
      },
      "InfoRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email.",
            "example": "user@mail.com"
          },
          "name": {
            "type": "string",
            "description": "User name.",
            "example": "Alex"
          },
          "gender": {},
          "avatarURL": {
            "type": "string",
            "description": "User avatar.",
            "example": "//www.gravatar.com/avatar/0312d0d39585741666c19c217ed769f7"
          },
          "id": {
            "type": "string",
            "description": "User id.",
            "example": "660ab1bf135b46797793af4f"
          }
        }
      },
      "ChengeAvatarRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "ChengeAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User avatar link.",
            "example": "http://res.cloudinary.com/djb7jo0mt/image/upload/v1711980043/avatars/ovp85jj1soxfsxqnksji.jpg"
          }
        }
      },
      "ChengeUserInfoRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name.",
            "example": "Alex"
          },
          "email": {
            "type": "string",
            "description": "User email.",
            "example": "user@mail.com"
          },
          "gender": {
            "type": "string",
            "description": "User gender",
            "example": "Man"
          },
          "oldPassword": {
            "type": "string",
            "description": "Former password of user.",
            "example": "Qwerasdzxc123"
          },
          "newPassword": {
            "type": "string",
            "description": "New password of user.",
            "example": "321cxzdsaewQ"
          }
        }
      },
      "CreatedWaterResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Owner id.",
            "example": "660ab1bf135b46797793af4f"
          },
          "date": {
            "type": "string",
            "description": "The date the record was created.",
            "example": "2024-02-03T22:00:00.000Z"
          },
          "daily_limit": {
            "type": "number",
            "description": "User's water daily limit.",
            "example": 2000
          },
          "water_entries": {
            "type": "arrey",
            "description": "An array of records about drinking water",
            "example": []
          }
        }
      },
      "ChengeDailyLimitBody": {
        "type": "object",
        "properties": {
          "daily_limit": {
            "type": "number",
            "description": "New limit.",
            "example": 2500
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "schema": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
